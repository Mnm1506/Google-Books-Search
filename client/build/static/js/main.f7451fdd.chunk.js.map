{"version":3,"sources":["components/DeleteBtn/index.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Books.js","utils/GoogleAPI.js","components/SaveBtn/index.js","components/ViewBtn/index.js","pages/Search.js","pages/Saved.js","components/Nav/index.js","App.js","index.js"],"names":["DeleteBtn","props","className","role","tabIndex","Jumbotron","children","style","height","clear","paddingTop","textAlign","axios","get","id","delete","bookData","post","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","TextArea","rows","FormBtn","float","marginBottom","Books","useState","books","setBooks","formObject","setFormObject","loadBooks","API","then","res","data","catch","err","console","log","handleInputChange","event","target","name","value","useEffect","onChange","placeholder","disabled","author","title","onClick","preventDefault","synopsis","length","book","key","_id","to","query","SaveBtn","marginLeft","Button","window","location","href","link","formTarget","Search","searchTerm","GoogleAPI","items","error","response","src","volumeInfo","imageLinks","thumbnail","alt","authors","description","image","checkedAuthor","alert","saveBook","previewLink","Nav","margin","App","exact","path","Saved","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7451fdd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The ...props means, spread all of the passed props onto this element\r\n// That way we don't have to define them all individually\r\nfunction DeleteBtn(props) {\r\n  return (\r\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\r\n      âœ—\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div className=\"jumbotron\"\r\n      style={{ height: 100, clear: \"both\", paddingTop: 50, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    getBooks: function(){\r\n        return axios.get(\"/api/books\");\r\n    },\r\n\r\n    getBook: function(id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n\r\n    deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id)\r\n    },\r\n\r\n    saveBook: function(bookData) {\r\n        return axios.post(\"/api/books\", bookData)\r\n    }\r\n};","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\r\n\r\n// This file exports the Input, TextArea, and FormBtn components\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nfunction Books() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [formObject, setFormObject] = useState({})\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res => \r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({...formObject, [name]: value})\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.title && formObject.author) {\r\n      API.saveBook({\r\n        title: formObject.title,\r\n        author: formObject.author,\r\n        synopsis: formObject.synopsis\r\n      })\r\n        .then(res => loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Books Should I Read?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                onChange={handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <Input\r\n                onChange={handleInputChange}\r\n                name=\"author\"\r\n                placeholder=\"Author (required)\"\r\n              />\r\n              <TextArea\r\n                onChange={handleInputChange}\r\n                name=\"synopsis\"\r\n                placeholder=\"Synopsis (Optional)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(formObject.author && formObject.title)}\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Submit Book\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Books On My List</h1>\r\n            </Jumbotron>\r\n            {books.length ? (\r\n              <List>\r\n                {books.map(book => (\r\n                  <ListItem key={book._id}>\r\n                    <Link to={\"/books/\" + book._id}>\r\n                      <strong>\r\n                        {book.title} by {book.author}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default Books;\r\n","import axios from \"axios\";\r\n\r\n\r\nexport default {\r\ngoolgeSearch: function(query){\r\n    return axios.get(` https://www.googleapis.com/books/v1/volumes?q=${query}`)\r\n}\r\n};","import React from \"react\"\r\n\r\nfunction SaveBtn(props) {\r\n    return(\r\n        <button {...props} style={{ float: \"right\", marginBottom: 10, marginLeft:5 }} className=\"btn btn-success\" role=\"button\">Save</button>\r\n    )\r\n}\r\n\r\nexport default SaveBtn;","import React from \"react\" \r\n\r\nfunction Button(props) {\r\n\r\n    return (<button style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\" onClick={() => window.location.href=props.link} formTarget=\"_blank\">View</button>)\r\n}\r\n\r\nexport default Button;","import React, { useState } from \"react\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport GoogleAPI from \"../utils/GoogleAPI\"\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport SaveButton from \"../components/SaveBtn\"\r\nimport API from \"../utils/API\"\r\nimport Button from \"../components/ViewBtn\";\r\n\r\nfunction Search() {\r\n\r\n    // Setting our component's initial state\r\n    const [books, setBooks] = useState([])\r\n    const [formObject, setFormObject] = useState({})\r\n\r\n    // Handles updating component state when the user types into the input field\r\n    function handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormObject({ ...formObject, [name]: value })\r\n    };\r\n\r\n    // When the form is submitted, use the API.saveBook method to save the book data\r\n    // Then reload books from the database\r\n    function handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        GoogleAPI.goolgeSearch(formObject.searchTerm)\r\n            .then(res => {\r\n                setBooks(res.data.items)\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            })\r\n    };\r\n\r\n    function saveBook(title, description, author, image, link) {\r\n        let checkedAuthor\r\n        if (author == null) {\r\n            checkedAuthor = \"Unlisted\"\r\n        } else {\r\n            checkedAuthor = author[0]\r\n        }\r\n\r\n        API.saveBook({\r\n            title: title,\r\n            author: checkedAuthor,\r\n            synopsis: description,\r\n            image: image,\r\n            link: link\r\n        })\r\n            .then(alert(\"Book Saved Successfully!\"))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (<div>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-4\">\r\n                    <Jumbotron>\r\n                        <h1> Search Books </h1>\r\n                    </Jumbotron>\r\n                    <form>\r\n                        <Input\r\n                            onChange={handleInputChange}\r\n                            name=\"searchTerm\"\r\n                            placeholder=\"Book title or keyword\"\r\n                        />\r\n                        <FormBtn\r\n                            disabled={!(formObject.searchTerm)}\r\n                            onClick={handleFormSubmit}\r\n                        >\r\n                            Search\r\n              </FormBtn>\r\n                    </form>\r\n                </Col>\r\n                <Col size=\"md-8 sm-12\">\r\n                    <Jumbotron>\r\n                        <h1>Results here</h1>\r\n                    </Jumbotron>\r\n                    {books.length ? (\r\n                        <List>\r\n                            {books.map(book => (\r\n                                <ListItem key={book._id}>\r\n                                    <strong>\r\n                                        <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"search result\"></img>\r\n                                        {book.volumeInfo.title} by  <span id=\"authorList\">{book.volumeInfo.authors}</span>\r\n                                    </strong>\r\n                                    <SaveButton onClick={() => saveBook(book.volumeInfo.title, book.volumeInfo.description, book.volumeInfo.authors, book.volumeInfo.imageLinks.thumbnail, book.volumeInfo.previewLink)} />\r\n                                    <Button link={book.volumeInfo.previewLink} />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    ) : (\r\n                        <h3>No Results to Display</h3>\r\n                    )}\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    </div>)\r\n}\r\n\r\nexport default Search\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\n\r\nfunction Books() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [formObject, setFormObject] = useState({})\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res => \r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({...formObject, [name]: value})\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.title && formObject.author) {\r\n      API.saveBook({\r\n        title: formObject.title,\r\n        author: formObject.author,\r\n        synopsis: formObject.synopsis\r\n      })\r\n        .then(res => loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-6\">\r\n          <Jumbotron>\r\n            <h1>Saved Books </h1>\r\n          </Jumbotron>\r\n          {books.length ? (\r\n            <List>\r\n              {books.map(book => (\r\n                <ListItem key={book._id}>\r\n                  <Link to={\"/books/\" + book._id}>\r\n                    <strong>\r\n                    <img src={book.image} alt=\"search result\"></img>\r\n                      {book.title} by  <span id=\"authorList\">{book.author}</span>\r\n                    </strong>\r\n                  </Link>\r\n\r\n                  <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          ) : (\r\n            <h3>No Results to Display</h3>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default Books;\r\n","import React from \"react\";\r\n\r\nfunction Nav({children}) {\r\n  return (\r\n    <div style={{ height: 70, margin: \"2px\" }}> {children}\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Google Book Search\r\n      </a>\r\n      <a className=\"navbar-brand\" href=\"/search\">\r\n        Search\r\n      </a>\r\n      <a className=\"navbar-brand\" href=\"/Saved\">\r\n        Saved Books\r\n      </a>\r\n    </nav>\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Books from \"./pages/Books\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path={[\"/\", \"/search\"]}>\n           <Search />\n          </Route>\n          <Route exact path=\"/books/:id\">\n           <Books />\n          </Route>\n          <Route exact path=\"/saved\">\n           <Saved />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}